{
	"name": "csharpfixformat",
	"displayName": "C# FixFormat",
	"description": "Fix format of usings / indents / braces / empty lines",
	"icons": {
		"default": "icon-128.png"
	},
	"icon": "icon-128.png",
	"version": "0.0.84",
	"publisher": "Leopotam",
	"engines": {
		"vscode": "^1.37.0"
	},
	"categories": [
		"Formatters",
		"Programming Languages",
		"Linters",
		"Other"
	],
	"activationEvents": [
		"onLanguage:csharp",
		"onCommand:csharpfixformat.formatFolder"
	],
	"author": {
		"name": "Leopotam",
		"email": "leopotam@gmail.com"
	},
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "csharpfixformat.formatFolder",
				"title": "C#FixFormat: format C# files"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "explorerResourceIsFolder",
					"command": "csharpfixformat.formatFolder"
				}
			]
		},
		"configuration": {
			"title": "C# FixFormat configuration",
			"properties": {
				"csharpfixformat.sort.usings.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Should usings be sorted or not."
				},
				"csharpfixformat.sort.usings.order": {
					"type": "string",
					"default": "System",
					"description": "Put namespaces in proper order. Values should be splitted with space."
				},
				"csharpfixformat.sort.usings.splitGroups": {
					"type": "boolean",
					"default": false,
					"description": "Insert blank line between using blocks grouped by first part of namespace."
				},
				"csharpfixformat.style.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable code reformat with style options."
				},
				"csharpfixformat.style.braces.onSameLine": {
					"type": "boolean",
					"default": true,
					"description": "Should open braces be kept on expression line (K&R style) or on new line."
				},
				"csharpfixformat.style.braces.allowInlines": {
					"type": "boolean",
					"default": true,
					"description": "Allow expressions inside braces at one line."
				},
				"csharpfixformat.style.indent.preprocessorIgnored": {
					"type": "boolean",
					"default": true,
					"description": "Should preprocessor directives ignore indentation or use it."
				},
				"csharpfixformat.style.indent.regionIgnored": {
					"type": "boolean",
					"default": false,
					"description": "Should #region / #endregion directives ignore indentation or use it."
				},
				"csharpfixformat.style.indent.switchCaseIgnored": {
					"type": "boolean",
					"default": false,
					"description": "Should switch cases ignore indentation or use it."
				},
				"csharpfixformat.style.newline.atEnd": {
					"type": "boolean",
					"default": false,
					"description": "Force adds new empty line at end."
				},
				"csharpfixformat.style.newline.elseCatch": {
					"type": "boolean",
					"default": false,
					"description": "Force places else / catch expression to new line."
				},
				"csharpfixformat.style.newline.maxAmount": {
					"type": "number",
					"default": 2,
					"description": "Amount of new line (\\n) symbols allowed in row. 1 means no blank lines. Use 0 for disable."
				},
				"csharpfixformat.style.operators.onSameLine": {
					"type": "boolean",
					"default": true,
					"description": "Should operators be kept on expression line or on new line for multilined expressions."
				},
				"csharpfixformat.style.spaces.beforeParenthesis": {
					"type": "boolean",
					"default": true,
					"description": "Space before '(' - opening parenthesis."
				},
				"csharpfixformat.style.spaces.afterParenthesis": {
					"type": "boolean",
					"default": true,
					"description": "Space after ')' - closing parenthesis."
				},
				"csharpfixformat.style.spaces.beforeIndexerBracket": {
					"type": "boolean",
					"default": true,
					"description": "Override spaces.beforeBracket rule for indexer sequence 'this['."
				},
				"csharpfixformat.style.spaces.beforeBracket": {
					"type": "boolean",
					"default": false,
					"description": "Space before '[' - opening bracket."
				},
				"csharpfixformat.style.spaces.afterBracket": {
					"type": "boolean",
					"default": true,
					"description": "Space after ']' - closing bracket."
				},
				"csharpfixformat.style.spaces.insideEmptyParenthis": {
					"type": "boolean",
					"default": false,
					"description": "Space inside '()' - empty parenthis."
				},
				"csharpfixformat.style.spaces.insideEmptyBraces": {
					"type": "boolean",
					"default": true,
					"description": "Space inside '{}' - empty braces."
				},
				"csharpfixformat.style.spaces.insideEmptyBrackets": {
					"type": "boolean",
					"default": false,
					"description": "Space inside '[]' - empty brackets."
				},
				"csharpfixformat.style.spaces.removeAfterCommandBeforeParenthesis": {
					"type": "string",
					"default": "",
					"description": "Remove spaces after specified command and before (. Commands should be splitted with space."
				}
			}
		}
	},
	"keywords": [
		"C#",
		"csharp",
		"sort",
		"using",
		"format"
	],
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"watch": "node_modules/.bin/tsc -w -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"package": "node_modules/.bin/vsce package"
	},
	"devDependencies": {
		"@types/node": "^12.7.2",
		"tslint": "^5.19.0",
		"typescript": "^3.5.3",
		"vsce": "^1.66.0",
		"vscode": "^1.1.36"
	},
	"license": "MIT",
	"homepage": "https://github.com/Leopotam/vscode-csharpfixformat",
	"repository": {
		"type": "git",
		"url": "https://github.com/Leopotam/vscode-csharpfixformat"
	},
	"bugs": {
		"url": "https://github.com/Leopotam/vscode-csharpfixformat/issues"
	},
	"dependencies": {},
	"__metadata": {
		"id": "eb7755c6-c13a-480e-b3d2-a054b29774b0",
		"publisherId": "1e23902a-e5b4-43c6-8ec8-967bb6e5d992",
		"publisherDisplayName": "Leopotam"
	}
}